// reliket-client bundled module
var l=(c,t)=>()=>(t||c((t={exports:{}}).exports,t),t.exports);var r=l((g,u)=>{var y=require("net"),h=class{constructor(t=4e3,e="127.0.0.1"){this.port=t,this.host=e,this.socket=new y.Socket,this.callbacks=[],this.buffer=""}connect(){return new Promise((t,e)=>{this.socket.connect(this.port,this.host,()=>{console.log(`Connected to Reliket at ${this.host}:${this.port}`),t()}),this.socket.on("data",s=>{this.buffer+=s.toString();let o=this.buffer.split(`
`);this.buffer=o.pop(),o.forEach(i=>{let n=i.trim();n.length>0&&this.callbacks.forEach(b=>b(n))})}),this.socket.on("error",s=>{console.error("Socket error:",s),e(s)}),this.socket.on("close",()=>{console.log("Connection closed")})})}sendCommand(t){return new Promise((e,s)=>{this.socket.write(t+`
`,o=>{o?s(o):e()})})}onData(t){this.callbacks.push(t)}close(){this.socket.destroy()}};u.exports=h});var f=l((v,d)=>{var w=r(),a=class{constructor(t={}){this.client=new w(t.port||4e3,t.host||"127.0.0.1")}async connect(){await this.client.connect()}async send({topic:t,messages:e}){for(let s of e){let o=typeof s.value=="object"?JSON.stringify(s.value):s.value;await this.client.sendCommand(`send topic=${t} ${o}`)}}async disconnect(){this.client.close()}};d.exports=a});var k=l((O,m)=>{var C=r(),p=class{constructor(t={}){this.client=new C(t.port||4e3,t.host||"127.0.0.1"),this.topic=t.topic}async connect(){await this.client.connect(),this.client.sendCommand(`subscribe topic=${this.topic}`),console.log(`Subscribed to topic: ${this.topic}`)}async run({eachMessage:t}){this.client.onData(e=>{if(e.startsWith("NOTIFY ")){let s=e.slice(7).trim(),o=s.indexOf(":");if(o===-1){console.warn(`Malformed notify message: ${e}`);return}let i=s.slice(0,o).trim(),n=s.slice(o+1).trim();i===this.topic&&t({topic:i,message:n})}})}async disconnect(){this.client.sendCommand(`unsubscribe topic=${this.topic}`),this.client.close()}};m.exports=p});var $=r(),q=f(),x=k();module.exports={ReliketClient:$,ReliketProducer:q,ReliketConsumer:x};
